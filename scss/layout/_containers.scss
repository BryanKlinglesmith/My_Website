//==============================
// Containers
//==============================

/*using flexbox instead of floats to position my rows and columns
I'm making the entire body a flex container and making the direction
a column so everything is positioned for mobile first styling.
The min-height is used for making a sticky footer with flexbox.
100vh means the columns are as big as the browser and the footer
is at the bottom even if there isn't enough content to fill the page.'*/

body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

.banner,
.welcome,
.main-footer {
    display: flex;
}

.main-container {
    flex: 1;
}

.welcome{
    flex-direction: column;
}

.banner {
    justify-content: center;
    flex-wrap: wrap;

}

.primary {
    padding: 20px;
    flex-wrap: wrap;
    border: solid black;    
}

.secondary {
    padding: 20px;
    border: solid black;
    margin-left: .1em;
}

.projects,
.row1,
.project-images {
    display: flex; 
}

.projects {
    flex-wrap: wrap;
    flex-direction: column;
    background-color: #808080;
}

.project-title {
    width: 100%;
    /* The width of 100% keeps the projects column below the Welcome and Twitter columns in wider screen formats */
    text-align: center;
    background-color: #808080;
    font-size: 2em;

}


.row1 {
    flex-grow: 1;
    justify-content: center;
    flex-direction: column;
}

a.link {
    margin: 0px 10px 10px;
    background-color: pink;
}

.main-footer {
    color: #000;
    height: 75px;
    justify-content: center;
}

